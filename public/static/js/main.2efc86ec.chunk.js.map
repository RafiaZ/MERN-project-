{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","time","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.2efc86ec.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n\r\n\r\n\r\nexport const AuthContext =createContext({\r\n    isLoggedIn : false,\r\n    userId: null,\r\n    token: null,\r\n    login: () =>{},\r\n    logout: ()=>{}\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () =>{\r\n    const [token, setToken] = useState(false);\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState(false);\r\n  \r\n    const login = useCallback((uid, token, expirationDate) => {\r\n      setToken(token);\r\n      setUserId(uid);\r\n  \r\n      const tokenExpirationDate =\r\n        expirationDate || new Date(new Date().getTime() + 1000*60*60);\r\n      setTokenExpirationDate(tokenExpirationDate);\r\n      localStorage.setItem(\r\n        \"userData\",\r\n        JSON.stringify({\r\n          userId: uid,\r\n          token: token,\r\n          expiration: tokenExpirationDate.toISOString(),\r\n        })\r\n      );\r\n    }, []);\r\n  \r\n    const logout = useCallback(() => {\r\n      setToken(null);\r\n      setTokenExpirationDate(null);\r\n      setUserId(null);\r\n      localStorage.removeItem(\"userData\");\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      if (token && tokenExpirationDate) {\r\n        const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n        logoutTimer = setTimeout(logout, remainingTime);\r\n      } else{\r\n        clearTimeout(logoutTimer);\r\n      }\r\n    }, [token, logout, tokenExpirationDate]);\r\n  \r\n    useEffect(() => {\r\n      const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (\r\n        storedData &&\r\n        storedData.token &&\r\n        new Date(storedData.expiration) > new Date()\r\n      ) {\r\n        login(\r\n          storedData.userId,\r\n          storedData.token,\r\n          new Date(storedData.expiration)\r\n        );\r\n      }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId};\r\n}","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\n\r\nconst MainHeader =props =>{\r\n    return (\r\n        <header className=\"main-header\">\r\n      {props.children}\r\n    </header>\r\n    )\r\n    \r\n};\r\n\r\nexport default MainHeader ;","import React, { useContext } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css'\r\n\r\nconst NavLinks = props =>{\r\n    const auth= useContext(AuthContext);\r\n\r\n        return <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n            </li>\r\n            )}\r\n           {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">ADD PLACES</NavLink>\r\n            </li>\r\n           )}\r\n           \r\n            {!auth.isLoggedIn && (\r\n                <li>\r\n                <NavLink to=\"/auth\">AUTHENTICATION</NavLink>\r\n            </li>\r\n            )}\r\n\r\n            { auth.isLoggedIn && \r\n            <li>\r\n                <button onClick={auth.logout}>LOGOUT</button>\r\n            </li>\r\n            }\r\n            \r\n\r\n            </ul>\r\n        \r\n\r\n};\r\n\r\n export default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props =>{\r\n    const content =(\r\n        <CSSTransition\r\n        in={props.show}\r\n        time={1000}\r\n        classNames=\"slide-in-left\"\r\n        mountOnEnter\r\n        unmountOnExit>\r\n    <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>);\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n\r\n};\r\n\r\nexport default SideDrawer; ","import React, {useState} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from '../Navigation/SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () =>{\r\n    setDrawerIsOpen(true);\r\n  }\r\n\r\n  const closeDrawerHandler = () =>{\r\n    setDrawerIsOpen(false);\r\n  }\r\n  return (\r\n      <React.Fragment>\r\n      {drawerIsOpen  && <Backdrop onClick={closeDrawerHandler}/> }\r\n\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n          <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks/>\r\n          </nav>\r\n      </SideDrawer>\r\n     \r\n    <MainHeader>\r\n      <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n        <span />\r\n        <span />\r\n        <span />\r\n      </button>\r\n      <h1 className=\"main-navigation__title\">\r\n         <Link to=\"/\">  YourPlaces </Link>\r\n      </h1>\r\n      <nav>\r\n         <NavLinks/>  \r\n      </nav>\r\n    </MainHeader>\r\n    </React.Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n//import Users from \"./user/pages/Users\";\n//import NewPlace from \"./places/pages/NewPlace\";\n//import UserPlaces from \"./places/pages/UserPlaces\";\n//import UpdatePlace from \"./places/pages/UpdatePlace\";\n//import Auth from \"./user/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {\" \"}\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}